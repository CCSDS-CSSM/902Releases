<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--
********************************************************************************
        XML Schema generated by CCSDS Service Management Working Group's
                Papyrus UML Parser (PUP) at 2024-12-10T09:48:03Z
********************************************************************************
-->
<xsd:schema xmlns="urn:ccsds:schema:cssm"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="urn:ccsds:schema:cssm" >
   <xsd:include schemaLocation="902x12p11-CDE.xsd"/>

<!--
********************************************************************************
   Define enumeration "OccType"
********************************************************************************
-->
   <xsd:simpleType name="OccTypeType">
      <xsd:restriction base="xsd:token">
         <xsd:enumeration value="CELESTIALBODY"/>
         <xsd:enumeration value="ATMOSPHERE"/>
         <xsd:enumeration value="UMBRA"/>
         <xsd:enumeration value="PENUMBRA"/>
      </xsd:restriction>
   </xsd:simpleType>

<!--
********************************************************************************
   Define enumeration "CommsPlanningInfoStatus"
********************************************************************************
-->
   <xsd:simpleType name="CommsPlanningInfoStatusType">
      <xsd:restriction base="xsd:token">
         <xsd:enumeration value="TEST"/>
         <xsd:enumeration value="OPERATIONAL"/>
      </xsd:restriction>
   </xsd:simpleType>

<!--
********************************************************************************
   Define class "CommsPlanningInfoHeader"
   This is specialization of class"SrvMgtHeader"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="commsPlanningInfoHeader" type="CommsPlanningInfoHeaderType" substitutionGroup="srvMgtHeader" abstract="false"/>
   <xsd:complexType name="CommsPlanningInfoHeaderType">
      <xsd:complexContent>
         <xsd:extension base="SrvMgtHeaderType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="commsPlanningTypeList"/>
            </xsd:sequence>
            <xsd:attribute name="commsPlanningInfoStatus" type="CommsPlanningInfoStatusType" use="required"/>
            <xsd:attribute name="trajectoryRef" type="xsd:string" use="optional"/>
            <xsd:attribute name="ancilliaryInfo" type="xsd:string" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "CommsPlanningInfo"
   This is specialization of class"SrvMgtInfoEntity"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="commsPlanningInfo" type="CommsPlanningInfoType" substitutionGroup="srvMgtInfoEntity" abstract="false"/>
   <xsd:complexType name="CommsPlanningInfoType">
      <xsd:complexContent>
         <xsd:restriction base="SrvMgtInfoEntityType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="commsPlanningInfoHeader"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="commsPlanningInfoData"/>
            </xsd:sequence>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "CommsPlanningInfoData"
   This is specialization of class"SrvMgtData"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="commsPlanningInfoData" type="CommsPlanningInfoDataType" substitutionGroup="srvMgtData" abstract="false"/>
   <xsd:complexType name="CommsPlanningInfoDataType">
      <xsd:complexContent>
         <xsd:extension base="SrvMgtDataType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="commsPlanningInfoEventAssociation"/>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="srvMgtAbstractEvent"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "DefinedEvent"
   This is specialization of class"SrvMgtAbstractEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="definedEvent" type="DefinedEventType" substitutionGroup="srvMgtAbstractEvent" abstract="true"/>
   <xsd:complexType name="DefinedEventType">
      <xsd:complexContent>
         <xsd:extension base="SrvMgtAbstractEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AdditionalEvent"
   This is specialization of class"SrvMgtAbstractEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="additionalEvent" type="AdditionalEventType" substitutionGroup="srvMgtAbstractEvent" abstract="true"/>
   <xsd:complexType name="AdditionalEventType">
      <xsd:complexContent>
         <xsd:extension base="SrvMgtAbstractEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "CommsPlanningInfoEventAssociation"
********************************************************************************
-->
   <xsd:element name="commsPlanningInfoEventAssociation" type="CommsPlanningInfoEventAssociationType" abstract="false"/>
   <xsd:complexType name="CommsPlanningInfoEventAssociationType">
      <xsd:sequence>
         <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
         <xsd:element name="eventIDRef" type="xsd:IDREF" minOccurs="2" maxOccurs="unbounded"/>
      </xsd:sequence>
      <xsd:attribute name="associationID" type="xsd:string" use="required"/>
      <xsd:attribute name="commsPlanningInfoAssnKind" type="xsd:string" use="required"/>
      <xsd:attribute name="comment" type="xsd:string" use="optional"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractCommsEvent"
   This is specialization of class "DefinedEvent"
   As it is both a restriction and an extension of this class the definition
   must be done in two steps.
********************************************************************************
-->
   <xsd:element name="abstractCommsEventIntermediate" type="AbstractCommsEventIntermediateType" abstract="true"/>
   <xsd:complexType name="AbstractCommsEventIntermediateType">
      <xsd:complexContent>
         <xsd:restriction base="DefinedEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

   <xsd:element name="abstractCommsEvent" type="AbstractCommsEventType" substitutionGroup="definedEvent" abstract="true"/>
   <xsd:complexType name="AbstractCommsEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventIntermediateType">
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="optional"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ElevationAscendingEvent"
   This is specialization of class"AbstractCommsEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="elevationAscendingEvent" type="ElevationAscendingEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="ElevationAscendingEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractCommsEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="required"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ElevationDescendingEvent"
   This is specialization of class"AbstractCommsEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="elevationDescendingEvent" type="ElevationDescendingEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="ElevationDescendingEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractCommsEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="required"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "MaximumElevationEvent"
   This is specialization of class"AbstractCommsEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="maximumElevationEvent" type="MaximumElevationEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="MaximumElevationEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractCommsEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="required"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OccultationStartEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="occultationStartEvent" type="OccultationStartEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="OccultationStartEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
            <xsd:attribute name="celestialBody" type="xsd:string" use="required"/>
            <xsd:attribute name="occType" type="OccTypeType" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OccultationEndEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="occultationEndEvent" type="OccultationEndEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="OccultationEndEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
            <xsd:attribute name="celestialBody" type="xsd:string" use="required"/>
            <xsd:attribute name="occType" type="OccTypeType" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "SunAlignmentAngleEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="sunAlignmentAngleEvent" type="SunAlignmentAngleEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="SunAlignmentAngleEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
            <xsd:attribute name="angle" type="DblMinInc0_0MaxExc180_0Type" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "RangeEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="rangeEvent" type="RangeEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="RangeEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
            <xsd:attribute name="range" type="DblMinInc0_0Type" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "RangeRateEvent"
   This is specialization of class"AbstractCommsEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="rangeRateEvent" type="RangeRateEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="RangeRateEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractCommsEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="optional"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="required"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "RtltEvent"
   This is specialization of class"AbstractCommsEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="rtltEvent" type="RtltEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="RtltEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractCommsEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="apertureLocation"/>
            </xsd:sequence>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="elevation" type="DblMinInc-90_0MaxInc90_0Type" use="optional"/>
            <xsd:attribute name="azimuth" type="DblMinInc0_0MaxExc360_0Type" use="optional"/>
            <xsd:attribute name="rtlt" type="DblMinInc0_0Type" use="required"/>
            <xsd:attribute name="rangeRate" type="xsd:double" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" fixed="COMMS" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "RetCommsStartEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="retCommsStartEvent" type="RetCommsStartEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="RetCommsStartEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "RetCommsEndEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="retCommsEndEvent" type="RetCommsEndEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="RetCommsEndEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "FwdCommsStartEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="fwdCommsStartEvent" type="FwdCommsStartEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="FwdCommsStartEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "FwdCommsEndEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="fwdCommsEndEvent" type="FwdCommsEndEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="FwdCommsEndEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ProviderLimitationStartEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="providerLimitationStartEvent" type="ProviderLimitationStartEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="ProviderLimitationStartEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ProviderLimitationEndEvent"
   This is specialization of class"AbstractCommsEvent"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="providerLimitationEndEvent" type="ProviderLimitationEndEventType" substitutionGroup="abstractCommsEvent" abstract="false"/>
   <xsd:complexType name="ProviderLimitationEndEventType">
      <xsd:complexContent>
         <xsd:extension base="AbstractCommsEventType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

</xsd:schema>
