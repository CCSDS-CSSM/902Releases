<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<!--
********************************************************************************
        XML Schema generated by CCSDS Service Management Working Group's
                Papyrus UML Parser (PUP) at 2025-09-03T17:13:40Z
********************************************************************************
-->
<xsd:schema xmlns="urn:ccsds:schema:cssm"
            xmlns:frm="urn:ccsds:schema:frm"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            attributeFormDefault="unqualified"
            elementFormDefault="qualified"
            targetNamespace="urn:ccsds:schema:cssm" >
   <xsd:include schemaLocation="902x13m01TC1-AED.xsd"/>
   <xsd:include schemaLocation="./505x00TrajSchemas/ndmxml-3.0.0-master-3.0.xsd"/>
   <xsd:import namespace="urn:ccsds:schema:frm" schemaLocation="./901x03FrmSchemas/AllFunctionaResources.xsd"/>

<!--
********************************************************************************
   Define enumeration "ServiceType"
********************************************************************************
-->
   <xsd:simpleType name="ServiceTypeType">
      <xsd:restriction base="xsd:token">
         <xsd:enumeration value="APA-AZ/EL"/>
         <xsd:enumeration value="APA-X/Y"/>
         <xsd:enumeration value="DELTADOR"/>
         <xsd:enumeration value="DOPPLER"/>
         <xsd:enumeration value="OFFLINE-TM-RECORDING"/>
         <xsd:enumeration value="OFFLINE-TM-PROVISION"/>
         <xsd:enumeration value="RF-ONLY"/>
         <xsd:enumeration value="RANGING"/>
         <xsd:enumeration value="RESERVED"/>
         <xsd:enumeration value="TBD"/>
         <xsd:enumeration value="TELECOMMAND"/>
         <xsd:enumeration value="TELEMETRY"/>
         <xsd:enumeration value="TEST"/>
         <xsd:enumeration value="UNUSED"/>
         <xsd:enumeration value="VLBI"/>
      </xsd:restriction>
   </xsd:simpleType>

<!--
********************************************************************************
   Define enumeration "FrequencyBand"
********************************************************************************
-->
   <xsd:simpleType name="FrequencyBandType">
      <xsd:union memberTypes="frm:FreqBand FreqBandExtensionType">
      </xsd:union>
   </xsd:simpleType>

<!--
********************************************************************************
   Define enumeration "FreqBandExtension"
********************************************************************************
-->
   <xsd:simpleType name="FreqBandExtensionType">
      <xsd:restriction base="xsd:token">
         <xsd:enumeration value="N/A"/>
         <xsd:enumeration value="OTHER"/>
         <xsd:enumeration value="ALL"/>
      </xsd:restriction>
   </xsd:simpleType>

<!--
********************************************************************************
   Define class "SrvMgtAbstractEvent"
   This is specialization of class"AbstractEvent"
   It is a restriction of this class.
********************************************************************************
-->
   <xsd:element name="srvMgtAbstractEvent" type="SrvMgtAbstractEventType" substitutionGroup="abstractEvent" abstract="true"/>
   <xsd:complexType name="SrvMgtAbstractEventType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractEventType">
            <xsd:sequence>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
               <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtEventTime"/>
            </xsd:sequence>
            <xsd:attribute name="user" type="xsd:string" use="required"/>
            <xsd:attribute name="description" type="xsd:string" use="optional"/>
            <xsd:attribute name="latestOffset" type="DblMinExc0_0Type" use="optional"/>
            <xsd:attribute name="earliestOffset" type="DblMaxExc0_0Type" use="optional"/>
            <xsd:attribute name="identifier" type="xsd:ID" use="optional"/>
            <xsd:attribute name="type" type="xsd:string" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "SrvMgtEventTime"
   This is specialization of class "AbstractEventTime"
   As it is both a restriction and an extension of this class the definition
   must be done in two steps.
********************************************************************************
-->
   <xsd:element name="srvMgtEventTimeIntermediate" type="SrvMgtEventTimeIntermediateType" abstract="true"/>
   <xsd:complexType name="SrvMgtEventTimeIntermediateType">
      <xsd:complexContent>
         <xsd:restriction base="AbstractEventTimeType">
            <xsd:attribute name="epochTimeSystem" type="RestrictedStringUTCType" use="required"/>
         </xsd:restriction>
      </xsd:complexContent>
   </xsd:complexType>

   <xsd:element name="srvMgtEventTime" type="SrvMgtEventTimeType" substitutionGroup="abstractEventTime" abstract="false"/>
   <xsd:complexType name="SrvMgtEventTimeType">
      <xsd:complexContent>
         <xsd:extension base="SrvMgtEventTimeIntermediateType">
            <xsd:attribute name="absoluteTime" type="StringCcsdsAsciiTimeCodeBType" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "SrvMgtInfoEntity"
********************************************************************************
-->
   <xsd:element name="srvMgtInfoEntity" type="SrvMgtInfoEntityType" abstract="true"/>
   <xsd:complexType name="SrvMgtInfoEntityType">
      <xsd:sequence>
         <xsd:element minOccurs="1" maxOccurs="1" ref="srvMgtHeader"/>
         <xsd:element minOccurs="0" maxOccurs="unbounded" ref="srvMgtData"/>
      </xsd:sequence>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "SrvMgtHeader"
********************************************************************************
-->
   <xsd:element name="srvMgtHeader" type="SrvMgtHeaderType" abstract="true"/>
   <xsd:complexType name="SrvMgtHeaderType">
      <xsd:attribute name="originatingOrganization" type="xsd:string" use="required"/>
      <xsd:attribute name="generationTime" type="StringCcsdsAsciiTimeCodeBType" use="required"/>
      <xsd:attribute name="version" type="xsd:positiveInteger" use="optional"/>
      <xsd:attribute name="startTime" type="StringCcsdsAsciiTimeCodeBType" use="optional"/>
      <xsd:attribute name="endTime" type="StringCcsdsAsciiTimeCodeBType" use="optional"/>
      <xsd:attribute name="purpose" type="xsd:string" use="optional"/>
      <xsd:attribute name="description" type="xsd:string" use="optional"/>
      <xsd:attribute name="securityClassification" type="xsd:string" use="optional"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "SrvMgtData"
********************************************************************************
-->
   <xsd:element name="srvMgtData" type="SrvMgtDataType" abstract="true"/>
   <xsd:complexType name="SrvMgtDataType">
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ApertureLocation"
********************************************************************************
-->
   <xsd:element name="apertureLocation" type="ApertureLocationType" abstract="true"/>
   <xsd:complexType name="ApertureLocationType">
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ApertureCelestialBodyPosition"
   This is specialization of class"ApertureLocation"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="apertureCelestialBodyPosition" type="ApertureCelestialBodyPositionType" substitutionGroup="apertureLocation" abstract="false"/>
   <xsd:complexType name="ApertureCelestialBodyPositionType">
      <xsd:complexContent>
         <xsd:extension base="ApertureLocationType">
            <xsd:attribute name="celestialBody" type="xsd:string" use="required"/>
            <xsd:attribute name="celestialBodyLat" type="DblMinInc-90_0MaxInc90_0Type" use="required"/>
            <xsd:attribute name="celestialBodyLong" type="DblMinExc-360_0MaxExc360_0Type" use="required"/>
            <xsd:attribute name="celestialBodyAltitude" type="DblMinInc0_0Type" use="optional"/>
            <xsd:attribute name="apertureName" type="xsd:string" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ApertureReference"
   This is specialization of class"ApertureLocation"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="apertureReference" type="ApertureReferenceType" substitutionGroup="apertureLocation" abstract="false"/>
   <xsd:complexType name="ApertureReferenceType">
      <xsd:complexContent>
         <xsd:extension base="ApertureLocationType">
            <xsd:attribute name="siteRef" type="xsd:string" use="required"/>
            <xsd:attribute name="apertureRef" type="xsd:string" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "CommsPlanningTypeList"
********************************************************************************
-->
   <xsd:element name="commsPlanningTypeList" type="CommsPlanningTypeListType" abstract="false"/>
   <xsd:complexType name="CommsPlanningTypeListType">
      <xsd:sequence>
         <xsd:element name="planningInfoType" type="xsd:string" minOccurs="1" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractModCProfParm"
********************************************************************************
-->
   <xsd:element name="abstractModCProfParm" type="AbstractModCProfParmType" abstract="true"/>
   <xsd:complexType name="AbstractModCProfParmType">
      <xsd:attribute name="serviceProfileRef" type="xsd:string" use="required"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractWrapper"
********************************************************************************
-->
   <xsd:element name="abstractWrapper" type="AbstractWrapperType" abstract="true"/>
   <xsd:complexType name="AbstractWrapperType">
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractServiceAgreementWrapper"
   This is specialization of class"AbstractWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractServiceAgreementWrapper" type="AbstractServiceAgreementWrapperType" substitutionGroup="abstractWrapper" abstract="true"/>
   <xsd:complexType name="AbstractServiceAgreementWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractWrapperType">
            <xsd:attribute name="serviceAgreementID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractReportWrapper"
   This is specialization of class"AbstractWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractReportWrapper" type="AbstractReportWrapperType" substitutionGroup="abstractWrapper" abstract="true"/>
   <xsd:complexType name="AbstractReportWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractWrapperType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractSubmissionWrapper"
   This is specialization of class"AbstractWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractSubmissionWrapper" type="AbstractSubmissionWrapperType" substitutionGroup="abstractWrapper" abstract="true"/>
   <xsd:complexType name="AbstractSubmissionWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractWrapperType">
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractEventSeqWrapper"
   This is specialization of class"AbstractSubmissionWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractEventSeqWrapper" type="AbstractEventSeqWrapperType" substitutionGroup="abstractSubmissionWrapper" abstract="true"/>
   <xsd:complexType name="AbstractEventSeqWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSubmissionWrapperType">
            <xsd:attribute name="eventSequenceID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractTrajWrapper"
   This is specialization of class"AbstractSubmissionWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractTrajWrapper" type="AbstractTrajWrapperType" substitutionGroup="abstractSubmissionWrapper" abstract="true"/>
   <xsd:complexType name="AbstractTrajWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSubmissionWrapperType">
            <xsd:attribute name="trajectoryID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractConfigProfileWrapper"
   This is specialization of class"AbstractSubmissionWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractConfigProfileWrapper" type="AbstractConfigProfileWrapperType" substitutionGroup="abstractSubmissionWrapper" abstract="true"/>
   <xsd:complexType name="AbstractConfigProfileWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSubmissionWrapperType">
            <xsd:attribute name="configurationProfileID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractDDORScanPatternWrapper"
   This is specialization of class"AbstractSubmissionWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractDDORScanPatternWrapper" type="AbstractDDORScanPatternWrapperType" substitutionGroup="abstractSubmissionWrapper" abstract="true"/>
   <xsd:complexType name="AbstractDDORScanPatternWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSubmissionWrapperType">
            <xsd:attribute name="ddorScanPatternID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractSICFWrapper"
   This is specialization of class"AbstractSubmissionWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="abstractSICFWrapper" type="AbstractSICFWrapperType" substitutionGroup="abstractSubmissionWrapper" abstract="true"/>
   <xsd:complexType name="AbstractSICFWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSubmissionWrapperType">
            <xsd:attribute name="sicfID" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "DDORScanPatternWrapper"
   This is specialization of class"AbstractDDORScanPatternWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="ddorScanPatternWrapper" type="DDORScanPatternWrapperType" substitutionGroup="abstractDDORScanPatternWrapper" abstract="false"/>
   <xsd:complexType name="DDORScanPatternWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractDDORScanPatternWrapperType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="ddorScanPattern"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AsciiSICFWrapper"
   This is specialization of class"AbstractSICFWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="asciiSICFWrapper" type="AsciiSICFWrapperType" substitutionGroup="abstractSICFWrapper" abstract="false"/>
   <xsd:complexType name="AsciiSICFWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractSICFWrapperType">
            <xsd:attribute name="sicfFormat" type="xsd:string" use="required"/>
            <xsd:attribute name="sicfData" type="StringPreserveWhitespaceType" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "DDORScanPattern"
********************************************************************************
-->
   <xsd:element name="ddorScanPattern" type="DDORScanPatternType" abstract="false"/>
   <xsd:complexType name="DDORScanPatternType">
   </xsd:complexType>

<!--
********************************************************************************
   Define class "TleWrapper"
   This is specialization of class"AbstractTrajWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="tleWrapper" type="TleWrapperType" substitutionGroup="abstractTrajWrapper" abstract="false"/>
   <xsd:complexType name="TleWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractTrajWrapperType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="tle"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OmmWrapper"
   This is specialization of class"AbstractTrajWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="ommWrapper" type="OmmWrapperType" substitutionGroup="abstractTrajWrapper" abstract="false"/>
   <xsd:complexType name="OmmWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractTrajWrapperType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="omm"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OemWrapper"
   This is specialization of class"AbstractTrajWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="oemWrapper" type="OemWrapperType" substitutionGroup="abstractTrajWrapper" abstract="false"/>
   <xsd:complexType name="OemWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractTrajWrapperType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="oem"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OpmWrapper"
   This is specialization of class"AbstractTrajWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="opmWrapper" type="OpmWrapperType" substitutionGroup="abstractTrajWrapper" abstract="false"/>
   <xsd:complexType name="OpmWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractTrajWrapperType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="1" ref="opm"/>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OtherTrajWrapper"
   This is specialization of class"AbstractTrajWrapper"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="otherTrajWrapper" type="OtherTrajWrapperType" substitutionGroup="abstractTrajWrapper" abstract="false"/>
   <xsd:complexType name="OtherTrajWrapperType">
      <xsd:complexContent>
         <xsd:extension base="AbstractTrajWrapperType">
            <xsd:sequence>
               <xsd:element name="trajData">
                  <xsd:complexType>
                     <xsd:sequence>
                        <xsd:any minOccurs="1" maxOccurs="1"/>
                     </xsd:sequence>
                  </xsd:complexType>
               </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="trajFormat" type="xsd:string" use="required"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "Tle"
********************************************************************************
-->
   <xsd:element name="tle" type="TleType" abstract="false"/>
   <xsd:complexType name="TleType">
      <xsd:attribute name="tleLine0" type="stringTle0Type" use="required"/>
      <xsd:attribute name="tleLine1" type="StringTle1Type" use="required"/>
      <xsd:attribute name="tleLine2" type="StringTle2Type" use="required"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractOnlineSrvPkg"
********************************************************************************
-->
   <xsd:element name="abstractOnlineSrvPkg" type="AbstractOnlineSrvPkgType" abstract="true"/>
   <xsd:complexType name="AbstractOnlineSrvPkgType">
      <xsd:attribute name="trajectoryRef" type="xsd:string" use="optional"/>
      <xsd:attribute name="sicfRef" type="xsd:string" use="optional"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OnlineSrvPkgType1"
   This is specialization of class"AbstractOnlineSrvPkg"
   It is an extension of this class.
********************************************************************************
-->
   <xsd:element name="onlineSrvPkgType1" type="OnlineSrvPkgType1Type" substitutionGroup="abstractOnlineSrvPkg" abstract="false"/>
   <xsd:complexType name="OnlineSrvPkgType1Type">
      <xsd:complexContent>
         <xsd:extension base="AbstractOnlineSrvPkgType">
            <xsd:sequence>
               <xsd:element minOccurs="1" maxOccurs="unbounded" ref="onlineSrvPkgType1Details"/>
               <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractModESeqParm"/>
            </xsd:sequence>
            <xsd:attribute name="eventSequenceRef" type="xsd:string" use="optional"/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "OnlineSrvPkgType1Details"
********************************************************************************
-->
   <xsd:element name="onlineSrvPkgType1Details" type="OnlineSrvPkgType1DetailsType" abstract="false"/>
   <xsd:complexType name="OnlineSrvPkgType1DetailsType">
      <xsd:sequence>
         <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ddorScanPatternDetails"/>
         <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractModCProfParm"/>
      </xsd:sequence>
      <xsd:attribute name="configurationProfileRef" type="xsd:string" use="required"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "DDORScanPatternDetails"
********************************************************************************
-->
   <xsd:element name="ddorScanPatternDetails" type="DDORScanPatternDetailsType" abstract="false"/>
   <xsd:complexType name="DDORScanPatternDetailsType">
      <xsd:attribute name="ddorScanPatternRef" type="xsd:string" use="required"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "ServiceInfo"
********************************************************************************
-->
   <xsd:element name="serviceInfo" type="ServiceInfoType" abstract="false"/>
   <xsd:complexType name="ServiceInfoType">
      <xsd:sequence>
         <xsd:element minOccurs="0" maxOccurs="unbounded" ref="abstractParameter"/>
      </xsd:sequence>
      <xsd:attribute name="serviceType" type="ServiceTypeType" use="required"/>
      <xsd:attribute name="frequencyBand" type="FrequencyBandType" use="required"/>
   </xsd:complexType>

<!--
********************************************************************************
   Define class "AbstractModESeqParm"
********************************************************************************
-->
   <xsd:element name="abstractModESeqParm" type="AbstractModESeqParmType" abstract="true"/>
   <xsd:complexType name="AbstractModESeqParmType">
   </xsd:complexType>

</xsd:schema>
